// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HomePage /> No Data homepage noData test 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "alignItems": "center",
      "backgroundColor": "white",
      "flexGrow": 1,
      "justifyContent": "center",
      "paddingBottom": 20,
    }
  }
>
  <View>
    <Text
      style={
        [
          {
            "color": "black",
          },
          {
            "textAlign": "center",
          },
        ]
      }
    >
      Welcome to Wallet-In-One!
      

      Connect your Assets to See your Funds
    </Text>
  </View>
</RCTScrollView>
`;

exports[`<HomePage /> homePage pie chart bar chart test 1`] = `
<RCTScrollView
  ListHeaderComponent={
    <React.Fragment>
      <View
        style={
          {
            "paddingHorizontal": 40,
            "paddingTop": 30,
          }
        }
      >
        <SwitchSelector
          accessibilityLabel={null}
          animationDuration={100}
          backgroundColor="#FFFFFF"
          bold={false}
          borderColor="#7a44cf"
          borderRadius={50}
          borderWidth={1}
          buttonColor="#7a44cf"
          buttonMargin={1}
          disableValueChangeOnPress={false}
          disabled={false}
          fontSize={14}
          hasPadding={true}
          height={60}
          imageStyle={
            {
              "height": 20,
              "width": 20,
            }
          }
          initial={0}
          onPress={[Function]}
          options={
            [
              {
                "label": "Pie Chart",
                "testID": "pie",
                "value": "pie",
              },
              {
                "label": "Stacked Bar Chart",
                "testID": "stacked",
                "value": "stacked",
              },
            ]
          }
          returnObject={false}
          selectedColor="#fff"
          selectedTextContainerStyle={{}}
          selectedTextStyle={{}}
          style={{}}
          testID={null}
          textColor="#000000"
          textContainerStyle={{}}
          textStyle={
            {
              "fontSize": 18,
              "fontWeight": "bold",
            }
          }
          touchableProps={{}}
          value={1}
          valuePadding={1}
        />
      </View>
      <React.Fragment>
        <Text
          style={
            [
              {
                "color": "black",
                "fontSize": 40,
                "fontWeight": "800",
              },
              {
                "fontSize": 30,
                "paddingTop": 20,
                "textAlign": "center",
              },
            ]
          }
        />
        <PieChart
          assetSize={17}
          colours={
            [
              "pink",
              "turquoise",
              "lime",
              "#FA991C",
            ]
          }
          data={
            [
              {
                "x": "Banks",
                "y": 9.98,
              },
              {
                "x": "Cryptocurrency from wallets",
                "y": 170.28,
              },
              {
                "x": "Stock Accounts",
                "y": 266.23,
              },
              {
                "x": "Cryptocurrency from exchanges",
                "y": 0.13,
              },
            ]
          }
          handlePressIn={[Function]}
          labelCount={4}
          numSize={27}
        />
        <VictoryBar
          barWidth={18}
          containerComponent={
            <VictoryContainer
              className="VictoryContainer"
              portalComponent={<Portal />}
              portalZIndex={99}
              responsive={true}
              role="img"
            />
          }
          data={
            [
              {
                "x": "Banks",
                "y": 9.98,
              },
              {
                "x": "Cryptocurrency from wallets",
                "y": 170.28,
              },
              {
                "x": "Stock Accounts",
                "y": 266.23,
              },
              {
                "x": "Cryptocurrency from exchanges",
                "y": 0.13,
              },
            ]
          }
          dataComponent={<NativeBar />}
          events={
            [
              {
                "eventHandlers": {
                  "onPressIn": [Function],
                },
                "target": "data",
              },
              {
                "eventHandlers": {
                  "onPressIn": [Function],
                },
                "target": "labels",
              },
            ]
          }
          groupComponent={<G />}
          height={240}
          horizontal={true}
          labelComponent={
            <NativeVictoryLabel
              dy={-20}
              style={
                {
                  "fill": "black",
                  "fontFamily": "",
                  "fontSize": 22,
                  "fontWeight": "900",
                }
              }
              x={30}
            />
          }
          labels={[Function]}
          padding={40}
          samples={50}
          sortOrder="ascending"
          standalone={true}
          style={
            {
              "data": {
                "fill": [Function],
              },
            }
          }
          theme={
            {
              "area": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "data": {
                    "fill": "#252525",
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "axis": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "axis": {
                    "fill": "transparent",
                    "stroke": "#252525",
                    "strokeLinecap": "round",
                    "strokeLinejoin": "round",
                    "strokeWidth": 1,
                  },
                  "axisLabel": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 25,
                    "stroke": "transparent",
                    "textAnchor": "middle",
                  },
                  "grid": {
                    "fill": "none",
                    "pointerEvents": "painted",
                    "stroke": "none",
                  },
                  "tickLabels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  },
                  "ticks": {
                    "fill": "transparent",
                    "size": 1,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "bar": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "data": {
                    "fill": "#252525",
                    "padding": 8,
                    "strokeWidth": 0,
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "boxplot": {
                "boxWidth": 20,
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "max": {
                    "padding": 8,
                    "stroke": "#252525",
                    "strokeWidth": 1,
                  },
                  "maxLabels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 3,
                    "stroke": "transparent",
                  },
                  "median": {
                    "padding": 8,
                    "stroke": "#252525",
                    "strokeWidth": 1,
                  },
                  "medianLabels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 3,
                    "stroke": "transparent",
                  },
                  "min": {
                    "padding": 8,
                    "stroke": "#252525",
                    "strokeWidth": 1,
                  },
                  "minLabels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 3,
                    "stroke": "transparent",
                  },
                  "q1": {
                    "fill": "#969696",
                    "padding": 8,
                  },
                  "q1Labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 3,
                    "stroke": "transparent",
                  },
                  "q3": {
                    "fill": "#969696",
                    "padding": 8,
                  },
                  "q3Labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 3,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "candlestick": {
                "candleColors": {
                  "negative": "#252525",
                  "positive": "#ffffff",
                },
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "data": {
                    "stroke": "#252525",
                    "strokeWidth": 1,
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 5,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "chart": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "width": 450,
              },
              "errorbar": {
                "borderWidth": 8,
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "data": {
                    "fill": "transparent",
                    "stroke": "#252525",
                    "strokeWidth": 2,
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "group": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "width": 450,
              },
              "histogram": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "data": {
                    "fill": "#969696",
                    "stroke": "#252525",
                    "strokeWidth": 2,
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "legend": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "gutter": 10,
                "orientation": "vertical",
                "style": {
                  "data": {
                    "type": "circle",
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  },
                  "title": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 5,
                    "stroke": "transparent",
                  },
                },
                "titleOrientation": "top",
              },
              "line": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "data": {
                    "fill": "transparent",
                    "stroke": "#252525",
                    "strokeWidth": 2,
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "pie": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 400,
                "padding": 50,
                "style": {
                  "data": {
                    "padding": 10,
                    "stroke": "transparent",
                    "strokeWidth": 1,
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 20,
                    "stroke": "transparent",
                  },
                },
                "width": 400,
              },
              "scatter": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "data": {
                    "fill": "#252525",
                    "stroke": "transparent",
                    "strokeWidth": 0,
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 10,
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
              "stack": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "width": 450,
              },
              "tooltip": {
                "cornerRadius": 5,
                "flyoutPadding": 5,
                "flyoutStyle": {
                  "fill": "#f0f0f0",
                  "pointerEvents": "none",
                  "stroke": "#252525",
                  "strokeWidth": 1,
                },
                "pointerLength": 10,
                "style": {
                  "fill": "#252525",
                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                  "fontSize": 14,
                  "letterSpacing": "normal",
                  "padding": 0,
                  "pointerEvents": "none",
                  "stroke": "transparent",
                },
              },
              "voronoi": {
                "colorScale": [
                  "#252525",
                  "#525252",
                  "#737373",
                  "#969696",
                  "#bdbdbd",
                  "#d9d9d9",
                  "#f0f0f0",
                ],
                "height": 300,
                "padding": 50,
                "style": {
                  "data": {
                    "fill": "transparent",
                    "stroke": "transparent",
                    "strokeWidth": 0,
                  },
                  "flyout": {
                    "fill": "#f0f0f0",
                    "pointerEvents": "none",
                    "stroke": "#252525",
                    "strokeWidth": 1,
                  },
                  "labels": {
                    "fill": "#252525",
                    "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                    "fontSize": 14,
                    "letterSpacing": "normal",
                    "padding": 5,
                    "pointerEvents": "none",
                    "stroke": "transparent",
                  },
                },
                "width": 450,
              },
            }
          }
          width={750}
        />
        
      </React.Fragment>
    </React.Fragment>
  }
  collapsable={false}
  contentContainerStyle={
    {
      "alignItems": "center",
      "backgroundColor": "white",
      "flexGrow": 1,
      "justifyContent": "center",
      "paddingBottom": 20,
    }
  }
  getItem={[Function]}
  getItemCount={[Function]}
  handlerTag={1}
  handlerType="NativeViewGestureHandler"
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  renderScrollComponent={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
  waitFor={
    [
      {
        "current": null,
      },
      {
        "current": null,
      },
    ]
  }
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          {
            "paddingHorizontal": 40,
            "paddingTop": 30,
          }
        }
      >
        <View
          accessibilityLabel={null}
          style={
            [
              {
                "flexDirection": "row",
              },
              {},
            ]
          }
          testID={null}
        >
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              onLayout={[Function]}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderRadius": 50,
                  "height": 62,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "borderColor": "#7a44cf",
                    "borderRadius": 50,
                    "borderWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "opacity": 1,
                    }
                  }
                  testID="pie"
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "color": "#fff",
                          "fontSize": 14,
                          "fontWeight": "normal",
                          "textAlign": "center",
                        },
                        {},
                      ]
                    }
                  >
                    Pie Chart
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "opacity": 1,
                    }
                  }
                  testID="stacked"
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "color": "#000000",
                          "fontSize": 14,
                          "fontWeight": "normal",
                          "textAlign": "center",
                        },
                        {
                          "fontSize": 18,
                          "fontWeight": "bold",
                        },
                      ]
                    }
                  >
                    Stacked Bar Chart
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <Text
        style={
          [
            {
              "color": "black",
              "fontSize": 40,
              "fontWeight": "800",
            },
            {
              "fontSize": 30,
              "paddingTop": 20,
              "textAlign": "center",
            },
          ]
        }
      />
      <RCTScrollView
        contentContainerStyle={
          {
            "alignItems": "center",
            "backgroundColor": "white",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
        style={
          {
            "flex": 1,
          }
        }
      >
        <View>
          <View
            className="VictoryContainer"
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            pointerEvents="box-none"
            style={
              {
                "position": "relative",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="300"
              bbWidth="750"
              focusable={false}
              height={300}
              meetOrSlice={0}
              minX={0}
              minY={0}
              role="img"
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "height": "100%",
                    "width": "100%",
                  },
                  {
                    "flex": 0,
                    "height": 300,
                    "width": 750,
                  },
                ]
              }
              vbHeight={300}
              vbWidth={750}
              width={750}
            >
              <RNSVGGroup>
                <RNSVGRect
                  fill={null}
                  height="300"
                  propList={
                    [
                      "fill",
                    ]
                  }
                  width="750"
                  x="0"
                  y="0"
                />
                <RNSVGGroup>
                  <RNSVGPath
                    d="M2.349691592702662,-239.68205005290886A10,10,0,0,1,12.86426207573194,-249.66880213844672A250,250,0,0,1,26.15583386832819,-248.62797983061444A10,10,0,0,1,34.98770841771022,-237.12626684495166L14.11594812587471,-104.67456280170295A5.9192034724472515,5.9192034724472515,0,0,1,2.349691592702732,-105.59594233984193Z"
                    fill={
                      {
                        "payload": 4294951115,
                        "type": 0,
                      }
                    }
                    matrix={
                      [
                        1,
                        0,
                        0,
                        1,
                        375,
                        150,
                      ]
                    }
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    propList={
                      [
                        "fill",
                      ]
                    }
                    responsible={true}
                  />
                  <RNSVGPath
                    d="M39.62980983653205,-236.39476377548263A10,10,0,0,1,51.57074764650754,-244.623093732338A250,250,0,0,1,151.37438168792093,198.96179675656236A10,10,0,0,1,137.05990671078658,196.64075910292968L63.56044992702735,88.95546848406678A10,10,0,0,1,65.29086330604076,75.7436675158518A100,100,0,0,0,26.55767031588883,-96.40897337588736A10,10,0,0,1,19.33532944336253,-107.60646450591429Z"
                    fill={
                      {
                        "payload": 4282441936,
                        "type": 0,
                      }
                    }
                    matrix={
                      [
                        1,
                        0,
                        0,
                        1,
                        375,
                        150,
                      ]
                    }
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    propList={
                      [
                        "fill",
                      ]
                    }
                    responsible={true}
                  />
                  <RNSVGPath
                    d="M133.17845130526288,199.29000545957558A10,10,0,0,1,130.12390791213062,213.46608299604728A250,250,0,1,1,-17.670661596278546,-249.37471347101294A10,10,0,0,1,-6.965690169586994,-239.59233153130603L-4.454533521846894,-109.23901912434353A10,10,0,0,1,-13.138798622442962,-99.13310229564539A100,100,0,1,0,46.74499528353288,88.40195368849315A10,10,0,0,1,59.67899452150366,91.60471484071267Z"
                    fill={
                      {
                        "payload": 4278255360,
                        "type": 0,
                      }
                    }
                    matrix={
                      [
                        1,
                        0,
                        0,
                        1,
                        375,
                        150,
                      ]
                    }
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    propList={
                      [
                        "fill",
                      ]
                    }
                    responsible={true}
                  />
                  <RNSVGPath
                    d="M-2.465115582134519,-249.92984483835343A0.05798275968520935,0.05798275968520935,0,1,1,-2.349155449567717,-249.93096167628067L-0.963077660324981,-99.99536229955959Z"
                    fill={
                      {
                        "payload": 4294613276,
                        "type": 0,
                      }
                    }
                    matrix={
                      [
                        1,
                        0,
                        0,
                        1,
                        375,
                        150,
                      ]
                    }
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    propList={
                      [
                        "fill",
                      ]
                    }
                    responsible={true}
                  />
                </RNSVGGroup>
                <RNSVGText
                  content={null}
                  dx={
                    [
                      "0",
                    ]
                  }
                  dy={[]}
                  font={{}}
                  rotate={[]}
                  x={
                    [
                      "375",
                    ]
                  }
                  y={
                    [
                      "171.035",
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="Assets"
                    dx={
                      [
                        "0",
                      ]
                    }
                    dy={
                      [
                        "0",
                      ]
                    }
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={
                      {
                        "fontFamily": "Gill Sans",
                        "fontSize": "17",
                        "textAnchor": "middle",
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                    rotate={[]}
                    x={
                      [
                        "375",
                      ]
                    }
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={
                    [
                      "0",
                    ]
                  }
                  dy={[]}
                  font={{}}
                  rotate={[]}
                  x={
                    [
                      "375",
                    ]
                  }
                  y={
                    [
                      "194.585",
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="4"
                    dx={
                      [
                        "0",
                      ]
                    }
                    dy={
                      [
                        "0",
                      ]
                    }
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={
                      {
                        "fontFamily": "Gill Sans",
                        "fontSize": "27",
                        "fontWeight": "700",
                        "textAnchor": "middle",
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                    rotate={[]}
                    x={
                      [
                        "375",
                      ]
                    }
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={
                    [
                      "0",
                    ]
                  }
                  dy={[]}
                  font={{}}
                  rotate={[]}
                  x={
                    [
                      "375",
                    ]
                  }
                  y={
                    [
                      "111.035",
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="Net Worth"
                    dx={
                      [
                        "0",
                      ]
                    }
                    dy={
                      [
                        "0",
                      ]
                    }
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={
                      {
                        "fontFamily": "Gill Sans",
                        "fontSize": "17",
                        "textAnchor": "middle",
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                    rotate={[]}
                    x={
                      [
                        "375",
                      ]
                    }
                    y={[]}
                  />
                </RNSVGText>
                <RNSVGText
                  content={null}
                  dx={
                    [
                      "0",
                    ]
                  }
                  dy={[]}
                  font={{}}
                  rotate={[]}
                  x={
                    [
                      "375",
                    ]
                  }
                  y={
                    [
                      "134.585",
                    ]
                  }
                >
                  <RNSVGTSpan
                    content="£446.62"
                    dx={
                      [
                        "0",
                      ]
                    }
                    dy={
                      [
                        "0",
                      ]
                    }
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    font={
                      {
                        "fontFamily": "Gill Sans",
                        "fontSize": "27",
                        "fontWeight": "700",
                        "textAnchor": "middle",
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                    rotate={[]}
                    x={
                      [
                        "375",
                      ]
                    }
                    y={[]}
                  />
                </RNSVGText>
                <View
                  pointerEvents="box-none"
                  style={
                    {
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                      "zIndex": 99,
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight="300"
                    bbWidth="750"
                    focusable={false}
                    height={300}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "height": "100%",
                          "overflow": "visible",
                          "width": "100%",
                        },
                        {
                          "flex": 0,
                          "height": 300,
                          "width": 750,
                        },
                      ]
                    }
                    vbHeight={300}
                    vbWidth={750}
                    width={750}
                  >
                    <RNSVGGroup />
                  </RNSVGSvgView>
                </View>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </RCTScrollView>
      <View
        className="VictoryContainer"
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        pointerEvents="box-none"
        style={
          {
            "position": "relative",
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="240"
          bbWidth="750"
          focusable={false}
          height={240}
          meetOrSlice={0}
          minX={0}
          minY={0}
          role="img"
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "height": "100%",
                "width": "100%",
              },
              {
                "flex": 0,
                "height": 240,
                "width": 750,
              },
            ]
          }
          vbHeight={240}
          vbWidth={750}
          width={750}
        >
          <RNSVGGroup>
            <RNSVGRect
              fill={null}
              height="240"
              propList={
                [
                  "fill",
                ]
              }
              width="750"
              x="0"
              y="0"
            />
            <RNSVGGroup>
              <RNSVGPath
                d="M 40, 209 
A 0 0 0 0 1, 40, 209 
L 40, 191 
A 0 0 0 0 1, 40, 191 
L 65.11587724899522, 191 
A 0 0 0 0 1, 65.11587724899522, 191 
L 65.11587724899522, 209 
A 0 0 0 0 1, 65.11587724899522, 209 
 z"
                fill={
                  {
                    "payload": 4294951115,
                    "type": 0,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                propList={
                  [
                    "fill",
                    "stroke",
                    "strokeWidth",
                  ]
                }
                responsible={true}
                stroke={
                  {
                    "payload": 4294951115,
                    "type": 0,
                  }
                }
                strokeWidth="0"
              />
              <RNSVGPath
                d="M 40, 155.66666666666669 
A 0 0 0 0 1, 40, 155.66666666666669 
L 40, 137.66666666666669 
A 0 0 0 0 1, 40, 137.66666666666669 
L 468.5302182323554, 137.66666666666669 
A 0 0 0 0 1, 468.5302182323554, 137.66666666666669 
L 468.5302182323554, 155.66666666666669 
A 0 0 0 0 1, 468.5302182323554, 155.66666666666669 
 z"
                fill={
                  {
                    "payload": 4282441936,
                    "type": 0,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                propList={
                  [
                    "fill",
                    "stroke",
                    "strokeWidth",
                  ]
                }
                responsible={true}
                stroke={
                  {
                    "payload": 4282441936,
                    "type": 0,
                  }
                }
                strokeWidth="0"
              />
              <RNSVGPath
                d="M 40, 102.33333333333334 
A 0 0 0 0 1, 40, 102.33333333333334 
L 40, 84.33333333333334 
A 0 0 0 0 1, 40, 84.33333333333334 
L 710, 84.33333333333334 
A 0 0 0 0 1, 710, 84.33333333333334 
L 710, 102.33333333333334 
A 0 0 0 0 1, 710, 102.33333333333334 
 z"
                fill={
                  {
                    "payload": 4278255360,
                    "type": 0,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                propList={
                  [
                    "fill",
                    "stroke",
                    "strokeWidth",
                  ]
                }
                responsible={true}
                stroke={
                  {
                    "payload": 4278255360,
                    "type": 0,
                  }
                }
                strokeWidth="0"
              />
              <RNSVGPath
                d="M 40, 49 
A 0 0 0 0 1, 40, 49 
L 40, 31 
A 0 0 0 0 1, 40, 31 
L 40.327160725688316, 31 
A 0 0 0 0 1, 40.327160725688316, 31 
L 40.327160725688316, 49 
A 0 0 0 0 1, 40.327160725688316, 49 
 z"
                fill={
                  {
                    "payload": 4294613276,
                    "type": 0,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                propList={
                  [
                    "fill",
                    "stroke",
                    "strokeWidth",
                  ]
                }
                responsible={true}
                stroke={
                  {
                    "payload": 4294613276,
                    "type": 0,
                  }
                }
                strokeWidth="0"
              />
              <RNSVGText
                content={null}
                dx={
                  [
                    "10",
                  ]
                }
                dy={[]}
                font={{}}
                name="bar-labels-0"
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                responsible={true}
                rotate={[]}
                x={
                  [
                    "30",
                  ]
                }
                y={
                  [
                    "187.81",
                  ]
                }
              >
                <RNSVGTSpan
                  content="●Banks"
                  dx={
                    [
                      "10",
                    ]
                  }
                  dy={
                    [
                      "0",
                    ]
                  }
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": "22",
                      "fontWeight": "900",
                      "textAnchor": "start",
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      "30",
                    ]
                  }
                  y={[]}
                />
              </RNSVGText>
              <RNSVGText
                content={null}
                dx={
                  [
                    "10",
                  ]
                }
                dy={[]}
                font={{}}
                name="bar-labels-1"
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                responsible={true}
                rotate={[]}
                x={
                  [
                    "30",
                  ]
                }
                y={
                  [
                    "134.4766666666667",
                  ]
                }
              >
                <RNSVGTSpan
                  content="●Cryptocurrency from wallets"
                  dx={
                    [
                      "10",
                    ]
                  }
                  dy={
                    [
                      "0",
                    ]
                  }
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": "22",
                      "fontWeight": "900",
                      "textAnchor": "start",
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      "30",
                    ]
                  }
                  y={[]}
                />
              </RNSVGText>
              <RNSVGText
                content={null}
                dx={
                  [
                    "10",
                  ]
                }
                dy={[]}
                font={{}}
                name="bar-labels-2"
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                responsible={true}
                rotate={[]}
                x={
                  [
                    "30",
                  ]
                }
                y={
                  [
                    "81.14333333333335",
                  ]
                }
              >
                <RNSVGTSpan
                  content="●Stock Accounts"
                  dx={
                    [
                      "10",
                    ]
                  }
                  dy={
                    [
                      "0",
                    ]
                  }
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": "22",
                      "fontWeight": "900",
                      "textAnchor": "start",
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      "30",
                    ]
                  }
                  y={[]}
                />
              </RNSVGText>
              <RNSVGText
                content={null}
                dx={
                  [
                    "10",
                  ]
                }
                dy={[]}
                font={{}}
                name="bar-labels-3"
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                responsible={true}
                rotate={[]}
                x={
                  [
                    "30",
                  ]
                }
                y={
                  [
                    "27.81",
                  ]
                }
              >
                <RNSVGTSpan
                  content="●Cryptocurrency from exchanges"
                  dx={
                    [
                      "10",
                    ]
                  }
                  dy={
                    [
                      "0",
                    ]
                  }
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  font={
                    {
                      "fontSize": "22",
                      "fontWeight": "900",
                      "textAnchor": "start",
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  rotate={[]}
                  x={
                    [
                      "30",
                    ]
                  }
                  y={[]}
                />
              </RNSVGText>
            </RNSVGGroup>
            <View
              pointerEvents="box-none"
              style={
                {
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "zIndex": 99,
                }
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight="240"
                bbWidth="750"
                focusable={false}
                height={240}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    {
                      "height": "100%",
                      "overflow": "visible",
                      "width": "100%",
                    },
                    {
                      "flex": 0,
                      "height": 240,
                      "width": 750,
                    },
                  ]
                }
                vbHeight={240}
                vbWidth={750}
                width={750}
              >
                <RNSVGGroup />
              </RNSVGSvgView>
            </View>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`<HomePage /> homepage stacked bar chart test 1`] = `
<RCTScrollView
  ListHeaderComponent={
    <React.Fragment>
      <View
        style={
          {
            "paddingHorizontal": 40,
            "paddingTop": 30,
          }
        }
      >
        <SwitchSelector
          accessibilityLabel={null}
          animationDuration={100}
          backgroundColor="#FFFFFF"
          bold={false}
          borderColor="#7a44cf"
          borderRadius={50}
          borderWidth={1}
          buttonColor="#7a44cf"
          buttonMargin={1}
          disableValueChangeOnPress={false}
          disabled={false}
          fontSize={14}
          hasPadding={true}
          height={60}
          imageStyle={
            {
              "height": 20,
              "width": 20,
            }
          }
          initial={0}
          onPress={[Function]}
          options={
            [
              {
                "label": "Pie Chart",
                "testID": "pie",
                "value": "pie",
              },
              {
                "label": "Stacked Bar Chart",
                "testID": "stacked",
                "value": "stacked",
              },
            ]
          }
          returnObject={false}
          selectedColor="#fff"
          selectedTextContainerStyle={{}}
          selectedTextStyle={{}}
          style={{}}
          testID={null}
          textColor="#000000"
          textContainerStyle={{}}
          textStyle={
            {
              "fontSize": 18,
              "fontWeight": "bold",
            }
          }
          touchableProps={{}}
          value={1}
          valuePadding={1}
        />
      </View>
      <StackedChart
        data={
          {
            "Banks": [
              {
                "id": "6",
                "x": "HSBC Personal",
                "y": 9.98,
              },
            ],
            "Cryptocurrency from exchanges": [
              {
                "id": 1,
                "x": "Binance",
                "y": 0.13,
              },
            ],
            "Cryptocurrency from wallets": [
              {
                "id": 5,
                "x": "BTC Wallet: 3FZbgi29cpjq2Gj...",
                "y": 170.35,
              },
            ],
            "Stock Accounts": [
              {
                "id": "xzaDvNRVJmcqe9BqLjGxH33o6oVye6hyy3lNK",
                "x": "Plaid IRA-Vanguard",
                "y": 266.23,
              },
            ],
            "all": [
              {
                "x": "Banks",
                "y": 9.98,
              },
              {
                "x": "Cryptocurrency from wallets",
                "y": 170.28,
              },
              {
                "x": "Stock Accounts",
                "y": 266.23,
              },
              {
                "x": "Cryptocurrency from exchanges",
                "y": 0.13,
              },
            ],
          }
        }
        handlePressIn={[Function]}
      />
    </React.Fragment>
  }
  collapsable={false}
  contentContainerStyle={
    {
      "alignItems": "center",
      "backgroundColor": "white",
      "flexGrow": 1,
      "justifyContent": "center",
      "paddingBottom": 20,
    }
  }
  getItem={[Function]}
  getItemCount={[Function]}
  handlerTag={2}
  handlerType="NativeViewGestureHandler"
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  renderScrollComponent={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
  waitFor={
    [
      {
        "current": null,
      },
      {
        "current": null,
      },
    ]
  }
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          {
            "paddingHorizontal": 40,
            "paddingTop": 30,
          }
        }
      >
        <View
          accessibilityLabel={null}
          style={
            [
              {
                "flexDirection": "row",
              },
              {},
            ]
          }
          testID={null}
        >
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              onLayout={[Function]}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderRadius": 50,
                  "height": 62,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "borderColor": "#7a44cf",
                    "borderRadius": 50,
                    "borderWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "opacity": 1,
                    }
                  }
                  testID="pie"
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "color": "#000000",
                          "fontSize": 14,
                          "fontWeight": "normal",
                          "textAlign": "center",
                        },
                        {
                          "fontSize": 18,
                          "fontWeight": "bold",
                        },
                      ]
                    }
                  >
                    Pie Chart
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "opacity": 1,
                    }
                  }
                  testID="stacked"
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "color": "#fff",
                          "fontSize": 14,
                          "fontWeight": "normal",
                          "textAlign": "center",
                        },
                        {},
                      ]
                    }
                  >
                    Stacked Bar Chart
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <RCTScrollView
        contentContainerStyle={
          {
            "alignItems": "center",
            "backgroundColor": "white",
            "flexGrow": 1,
            "justifyContent": "center",
            "paddingBottom": 20,
          }
        }
        style={
          {
            "flex": 1,
          }
        }
      >
        <View>
          <View
            className="VictoryContainer"
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            pointerEvents="box-none"
            style={
              {
                "position": "relative",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="300"
              bbWidth="750"
              focusable={false}
              height={300}
              meetOrSlice={0}
              minX={0}
              minY={0}
              role="img"
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "height": "100%",
                    "width": "100%",
                  },
                  {
                    "flex": 0,
                    "height": 300,
                    "width": 750,
                  },
                ]
              }
              vbHeight={300}
              vbWidth={750}
              width={750}
            >
              <RNSVGGroup>
                <RNSVGRect
                  fill={null}
                  height="300"
                  propList={
                    [
                      "fill",
                    ]
                  }
                  width="750"
                  x="0"
                  y="0"
                />
                <RNSVGGroup>
                  <RNSVGLine
                    fill={
                      {
                        "payload": 0,
                        "type": 0,
                      }
                    }
                    propList={
                      [
                        "fill",
                        "stroke",
                        "strokeWidth",
                        "strokeLinecap",
                        "strokeLinejoin",
                      ]
                    }
                    stroke={
                      {
                        "payload": 4286611584,
                        "type": 0,
                      }
                    }
                    strokeLinecap={1}
                    strokeLinejoin={1}
                    strokeWidth="1"
                    vectorEffect={1}
                    x1="50"
                    x2="50"
                    y1="50"
                    y2="250"
                  />
                  <RNSVGGroup>
                    <RNSVGLine
                      fill={null}
                      propList={
                        [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={
                        {
                          "payload": 4286611584,
                          "type": 0,
                        }
                      }
                      vectorEffect={1}
                      x1="50"
                      x2="700"
                      y1="216.16080453364006"
                      y2="216.16080453364006"
                    />
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-0-tickLabels-0"
                      rotate={[]}
                      x={
                        [
                          "39",
                        ]
                      }
                      y={
                        [
                          "220.42080453364005",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="50"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "12",
                            "letterSpacing": "normal",
                            "textAnchor": "end",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "39",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGLine
                      fill={null}
                      propList={
                        [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={
                        {
                          "payload": 4286611584,
                          "type": 0,
                        }
                      }
                      vectorEffect={1}
                      x1="50"
                      x2="700"
                      y1="182.32160906728015"
                      y2="182.32160906728015"
                    />
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-0-tickLabels-1"
                      rotate={[]}
                      x={
                        [
                          "39",
                        ]
                      }
                      y={
                        [
                          "186.58160906728014",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="100"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "12",
                            "letterSpacing": "normal",
                            "textAnchor": "end",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "39",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGLine
                      fill={null}
                      propList={
                        [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={
                        {
                          "payload": 4286611584,
                          "type": 0,
                        }
                      }
                      vectorEffect={1}
                      x1="50"
                      x2="700"
                      y1="148.48241360092015"
                      y2="148.48241360092015"
                    />
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-0-tickLabels-2"
                      rotate={[]}
                      x={
                        [
                          "39",
                        ]
                      }
                      y={
                        [
                          "152.74241360092014",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="150"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "12",
                            "letterSpacing": "normal",
                            "textAnchor": "end",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "39",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGLine
                      fill={null}
                      propList={
                        [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={
                        {
                          "payload": 4286611584,
                          "type": 0,
                        }
                      }
                      vectorEffect={1}
                      x1="50"
                      x2="700"
                      y1="114.64321813456021"
                      y2="114.64321813456021"
                    />
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-0-tickLabels-3"
                      rotate={[]}
                      x={
                        [
                          "39",
                        ]
                      }
                      y={
                        [
                          "118.90321813456022",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="200"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "12",
                            "letterSpacing": "normal",
                            "textAnchor": "end",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "39",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGLine
                      fill={null}
                      propList={
                        [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={
                        {
                          "payload": 4286611584,
                          "type": 0,
                        }
                      }
                      vectorEffect={1}
                      x1="50"
                      x2="700"
                      y1="80.80402266820028"
                      y2="80.80402266820028"
                    />
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-0-tickLabels-4"
                      rotate={[]}
                      x={
                        [
                          "39",
                        ]
                      }
                      y={
                        [
                          "85.06402266820028",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="250"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "12",
                            "letterSpacing": "normal",
                            "textAnchor": "end",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "39",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                </RNSVGGroup>
                <RNSVGGroup>
                  <RNSVGLine
                    fill={
                      {
                        "payload": 0,
                        "type": 0,
                      }
                    }
                    propList={
                      [
                        "fill",
                        "stroke",
                        "strokeWidth",
                        "strokeLinecap",
                        "strokeLinejoin",
                      ]
                    }
                    stroke={
                      {
                        "payload": 4286611584,
                        "type": 0,
                      }
                    }
                    strokeLinecap={1}
                    strokeLinejoin={1}
                    strokeWidth="1"
                    vectorEffect={1}
                    x1="50"
                    x2="700"
                    y1="250"
                    y2="250"
                  />
                  <RNSVGGroup>
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-1-tickLabels-0"
                      rotate={[]}
                      x={
                        [
                          "70",
                        ]
                      }
                      y={
                        [
                          "272.97",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="Banks"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "14",
                            "letterSpacing": "normal",
                            "textAnchor": "middle",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "70",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-1-tickLabels-1"
                      rotate={[]}
                      x={
                        [
                          "273.33333333333337",
                        ]
                      }
                      y={
                        [
                          "272.97",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="Crypto"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "14",
                            "letterSpacing": "normal",
                            "textAnchor": "middle",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "273.33333333333337",
                          ]
                        }
                        y={[]}
                      />
                      <RNSVGTSpan
                        content="Wallets "
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "14",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "14",
                            "letterSpacing": "normal",
                            "textAnchor": "middle",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "273.33333333333337",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-1-tickLabels-2"
                      rotate={[]}
                      x={
                        [
                          "476.66666666666674",
                        ]
                      }
                      y={
                        [
                          "272.97",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="Crypto"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "14",
                            "letterSpacing": "normal",
                            "textAnchor": "middle",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "476.66666666666674",
                          ]
                        }
                        y={[]}
                      />
                      <RNSVGTSpan
                        content="Exchanges"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "14",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "14",
                            "letterSpacing": "normal",
                            "textAnchor": "middle",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "476.66666666666674",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGText
                      content={null}
                      dx={
                        [
                          "0",
                        ]
                      }
                      dy={[]}
                      font={{}}
                      name="chart-axis-1-tickLabels-3"
                      rotate={[]}
                      x={
                        [
                          "680.0000000000001",
                        ]
                      }
                      y={
                        [
                          "272.97",
                        ]
                      }
                    >
                      <RNSVGTSpan
                        content="Stocks"
                        dx={
                          [
                            "0",
                          ]
                        }
                        dy={
                          [
                            "0",
                          ]
                        }
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        font={
                          {
                            "fontFamily": "Gill Sans",
                            "fontSize": "14",
                            "letterSpacing": "normal",
                            "textAnchor": "middle",
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "680.0000000000001",
                          ]
                        }
                        y={[]}
                      />
                    </RNSVGText>
                  </RNSVGGroup>
                </RNSVGGroup>
                <RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M 52.5, 243.24569658491455 
A 0 0 0 0 0, 52.5, 243.24569658491455 
L 52.5, 243.24569658491455 
A 0 0 0 0 0, 52.5, 243.24569658491455 
L 87.5, 243.24569658491455 
A 0 0 0 0 0, 87.5, 243.24569658491455 
L 87.5, 243.24569658491455 
A 0 0 0 0 0, 87.5, 243.24569658491455 
 z"
                      fill={
                        {
                          "payload": 4286578816,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4286578816,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 255.83333333333337, 134.70986104611166 
A 0 0 0 0 0, 255.83333333333337, 134.70986104611166 
L 255.83333333333337, 134.70986104611166 
A 0 0 0 0 0, 255.83333333333337, 134.70986104611166 
L 290.83333333333337, 134.70986104611166 
A 0 0 0 0 0, 290.83333333333337, 134.70986104611166 
L 290.83333333333337, 134.70986104611166 
A 0 0 0 0 0, 290.83333333333337, 134.70986104611166 
 z"
                      fill={
                        {
                          "payload": 4286578816,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4286578816,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 459.16666666666674, 249.91201809178747 
A 0 0 0 0 0, 459.16666666666674, 249.91201809178747 
L 459.16666666666674, 249.91201809178747 
A 0 0 0 0 0, 459.16666666666674, 249.91201809178747 
L 494.16666666666674, 249.91201809178747 
A 0 0 0 0 0, 494.16666666666674, 249.91201809178747 
L 494.16666666666674, 249.91201809178747 
A 0 0 0 0 0, 494.16666666666674, 249.91201809178747 
 z"
                      fill={
                        {
                          "payload": 4286578816,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4286578816,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 662.5000000000001, 250 
A 0 0 0 0 1, 662.5000000000001, 250 
L 662.5000000000001, 69.81981981981981 
A 0 0 0 0 1, 662.5000000000001, 69.81981981981981 
L 697.5000000000001, 69.81981981981981 
A 0 0 0 0 1, 697.5000000000001, 69.81981981981981 
L 697.5000000000001, 250 
A 0 0 0 0 1, 697.5000000000001, 250 
 z"
                      fill={
                        {
                          "payload": 4286578816,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4286578816,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M 52.5, 243.24569658491455 
A 0 0 0 0 0, 52.5, 243.24569658491455 
L 52.5, 243.24569658491455 
A 0 0 0 0 0, 52.5, 243.24569658491455 
L 87.5, 243.24569658491455 
A 0 0 0 0 0, 87.5, 243.24569658491455 
L 87.5, 243.24569658491455 
A 0 0 0 0 0, 87.5, 243.24569658491455 
 z"
                      fill={
                        {
                          "payload": 4294956800,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294956800,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 255.83333333333337, 134.70986104611166 
A 0 0 0 0 0, 255.83333333333337, 134.70986104611166 
L 255.83333333333337, 134.70986104611166 
A 0 0 0 0 0, 255.83333333333337, 134.70986104611166 
L 290.83333333333337, 134.70986104611166 
A 0 0 0 0 0, 290.83333333333337, 134.70986104611166 
L 290.83333333333337, 134.70986104611166 
A 0 0 0 0 0, 290.83333333333337, 134.70986104611166 
 z"
                      fill={
                        {
                          "payload": 4294956800,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294956800,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 459.16666666666674, 250 
A 0 0 0 0 1, 459.16666666666674, 250 
L 459.16666666666674, 249.91201809178747 
A 0 0 0 0 1, 459.16666666666674, 249.91201809178747 
L 494.16666666666674, 249.91201809178747 
A 0 0 0 0 1, 494.16666666666674, 249.91201809178747 
L 494.16666666666674, 250 
A 0 0 0 0 1, 494.16666666666674, 250 
 z"
                      fill={
                        {
                          "payload": 4294956800,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294956800,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 662.5000000000001, 250 
A 0 0 0 0 0, 662.5000000000001, 250 
L 662.5000000000001, 250 
A 0 0 0 0 0, 662.5000000000001, 250 
L 697.5000000000001, 250 
A 0 0 0 0 0, 697.5000000000001, 250 
L 697.5000000000001, 250 
A 0 0 0 0 0, 697.5000000000001, 250 
 z"
                      fill={
                        {
                          "payload": 4294956800,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294956800,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M 52.5, 243.24569658491455 
A 0 0 0 0 0, 52.5, 243.24569658491455 
L 52.5, 243.24569658491455 
A 0 0 0 0 0, 52.5, 243.24569658491455 
L 87.5, 243.24569658491455 
A 0 0 0 0 0, 87.5, 243.24569658491455 
L 87.5, 243.24569658491455 
A 0 0 0 0 0, 87.5, 243.24569658491455 
 z"
                      fill={
                        {
                          "payload": 4294944000,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294944000,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 255.83333333333337, 250 
A 0 0 0 0 1, 255.83333333333337, 250 
L 255.83333333333337, 134.70986104611166 
A 0 0 0 0 1, 255.83333333333337, 134.70986104611166 
L 290.83333333333337, 134.70986104611166 
A 0 0 0 0 1, 290.83333333333337, 134.70986104611166 
L 290.83333333333337, 250 
A 0 0 0 0 1, 290.83333333333337, 250 
 z"
                      fill={
                        {
                          "payload": 4294944000,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294944000,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 459.16666666666674, 250 
A 0 0 0 0 0, 459.16666666666674, 250 
L 459.16666666666674, 250 
A 0 0 0 0 0, 459.16666666666674, 250 
L 494.16666666666674, 250 
A 0 0 0 0 0, 494.16666666666674, 250 
L 494.16666666666674, 250 
A 0 0 0 0 0, 494.16666666666674, 250 
 z"
                      fill={
                        {
                          "payload": 4294944000,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294944000,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 662.5000000000001, 250 
A 0 0 0 0 0, 662.5000000000001, 250 
L 662.5000000000001, 250 
A 0 0 0 0 0, 662.5000000000001, 250 
L 697.5000000000001, 250 
A 0 0 0 0 0, 697.5000000000001, 250 
L 697.5000000000001, 250 
A 0 0 0 0 0, 697.5000000000001, 250 
 z"
                      fill={
                        {
                          "payload": 4294944000,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294944000,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                  </RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M 52.5, 250 
A 0 0 0 0 1, 52.5, 250 
L 52.5, 243.24569658491455 
A 0 0 0 0 1, 52.5, 243.24569658491455 
L 87.5, 243.24569658491455 
A 0 0 0 0 1, 87.5, 243.24569658491455 
L 87.5, 250 
A 0 0 0 0 1, 87.5, 250 
 z"
                      fill={
                        {
                          "payload": 4294927175,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294927175,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 255.83333333333337, 250 
A 0 0 0 0 0, 255.83333333333337, 250 
L 255.83333333333337, 250 
A 0 0 0 0 0, 255.83333333333337, 250 
L 290.83333333333337, 250 
A 0 0 0 0 0, 290.83333333333337, 250 
L 290.83333333333337, 250 
A 0 0 0 0 0, 290.83333333333337, 250 
 z"
                      fill={
                        {
                          "payload": 4294927175,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294927175,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 459.16666666666674, 250 
A 0 0 0 0 0, 459.16666666666674, 250 
L 459.16666666666674, 250 
A 0 0 0 0 0, 459.16666666666674, 250 
L 494.16666666666674, 250 
A 0 0 0 0 0, 494.16666666666674, 250 
L 494.16666666666674, 250 
A 0 0 0 0 0, 494.16666666666674, 250 
 z"
                      fill={
                        {
                          "payload": 4294927175,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294927175,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                    <RNSVGPath
                      d="M 662.5000000000001, 250 
A 0 0 0 0 0, 662.5000000000001, 250 
L 662.5000000000001, 250 
A 0 0 0 0 0, 662.5000000000001, 250 
L 697.5000000000001, 250 
A 0 0 0 0 0, 697.5000000000001, 250 
L 697.5000000000001, 250 
A 0 0 0 0 0, 697.5000000000001, 250 
 z"
                      fill={
                        {
                          "payload": 4294927175,
                          "type": 0,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      propList={
                        [
                          "fill",
                          "stroke",
                          "strokeWidth",
                        ]
                      }
                      responsible={true}
                      stroke={
                        {
                          "payload": 4294927175,
                          "type": 0,
                        }
                      }
                      strokeWidth="0"
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
                <View
                  pointerEvents="box-none"
                  style={
                    {
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                      "zIndex": 99,
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight="300"
                    bbWidth="750"
                    focusable={false}
                    height={300}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "height": "100%",
                          "overflow": "visible",
                          "width": "100%",
                        },
                        {
                          "flex": 0,
                          "height": 300,
                          "width": 750,
                        },
                      ]
                    }
                    vbHeight={300}
                    vbWidth={750}
                    width={750}
                  >
                    <RNSVGGroup />
                  </RNSVGSvgView>
                </View>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTScrollView>
`;
