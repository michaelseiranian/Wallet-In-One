// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LineChartScreen /> test line chart 1 1`] = `
<View>
  <View
    style={
      {
        "flexDirection": "row",
        "paddingBottom": 14,
        "paddingHorizontal": 10,
      }
    }
  >
    <Text
      style={
        {
          "color": "red",
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
      -2890.600
    </Text>
    <Text
      style={
        {
          "color": "red",
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       (
      -99.66
      %)
    </Text>
  </View>
  <View
    style={
      [
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "height": 10,
          "width": 100,
        }
      }
    >
      <RNSVGSvgView
        bbHeight="10"
        bbWidth="100"
        focusable={false}
        height={10}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 10,
              "width": 100,
            },
          ]
        }
        width={100}
      >
        <RNSVGGroup>
          <RNSVGPath
            fill={
              {
                "payload": 0,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeOpacity",
              ]
            }
            stroke={
              {
                "payload": 4294901760,
                "type": 0,
              }
            }
            strokeOpacity={0.2}
            strokeWidth="3"
          />
          <RNSVGDefs>
            <RNSVGLinearGradient
              gradient={
                [
                  0.2,
                  654245888,
                  0.4,
                  234815488,
                  1,
                  16711680,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="1"
              x1="0"
              x2="0"
              y1="0"
              y2="100%"
            />
          </RNSVGDefs>
          <RNSVGPath
            fill={
              {
                "brushRef": "1",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        animatedProps={
          {
            "width": 120,
          }
        }
        bbHeight="10"
        focusable={false}
        height={10}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
      >
        <RNSVGGroup>
          <RNSVGPath
            fill={
              {
                "payload": 0,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeOpacity",
              ]
            }
            stroke={
              {
                "payload": 4294901760,
                "type": 0,
              }
            }
            strokeOpacity={1}
            strokeWidth="3"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RNSVGLine
      propList={
        [
          "stroke",
          "strokeWidth",
          "strokeDasharray",
        ]
      }
      stroke={
        {
          "payload": 4286611584,
          "type": 0,
        }
      }
      strokeDasharray={
        [
          "3",
          "3",
        ]
      }
      strokeWidth="2"
      x1="0"
      x2="0"
      y1="0"
      y2="0"
    />
    <View
      collapsable={false}
      handlerTag={2}
      handlerType="LongPressGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          {
            "height": "100%",
            "opacity": 0,
            "transform": [
              {
                "translateX": -1,
              },
            ],
          }
        }
      >
        <RNSVGSvgView
          bbHeight="100%"
          focusable={false}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "bottom": 0,
                "height": "100%",
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
        >
          <RNSVGGroup>
            <RNSVGLine
              propList={
                [
                  "stroke",
                  "strokeWidth",
                  "strokeDasharray",
                ]
              }
              stroke={
                {
                  "payload": 4286611584,
                  "type": 0,
                }
              }
              strokeDasharray={
                [
                  "3",
                  "3",
                ]
              }
              strokeWidth="2"
              x1="0"
              x2="0"
              y1="0"
              y2="10"
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      collapsable={false}
      handlerTag={3}
      handlerType="LongPressGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "height": 32,
              "justifyContent": "center",
              "width": 32,
            },
            {
              "transform": [
                {
                  "translateX": -17,
                },
                {
                  "translateY": -16,
                },
                {
                  "scale": 0,
                },
              ],
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "backgroundColor": "black",
                "borderRadius": 32,
                "height": 32,
                "opacity": 0.1,
                "position": "absolute",
                "width": 32,
              },
              undefined,
            ]
          }
        />
        <View
          style={
            [
              {
                "backgroundColor": "black",
                "borderRadius": 8,
                "height": 8,
                "width": 8,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          {
            "color": "black",
            "fontSize": 12,
            "marginHorizontal": 5,
          }
        }
      >
        Date: 
      </Text>
      <TextInput
        animatedProps={
          {
            "text": "",
          }
        }
        editable={false}
        style={
          [
            {
              "color": "black",
            },
            {
              "color": "black",
              "fontSize": 13,
              "fontWeight": "bold",
            },
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          {
            "color": "black",
            "fontSize": 12,
            "marginHorizontal": 5,
          }
        }
      >
        Balance: 
      </Text>
      <TextInput
        animatedProps={
          {
            "text": "",
          }
        }
        editable={false}
        style={
          [
            {
              "color": "black",
            },
            {
              "color": "black",
              "fontSize": 13,
              "fontWeight": "bold",
            },
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
  </View>
</View>
`;

exports[`<LineChartScreen /> test line chart 2 1`] = `
<View>
  <Text
    style={
      {
        "color": "red",
        "fontSize": 11,
        "marginLeft": "auto",
        "textAlign": "right",
      }
    }
  >
    -99.66
    %
  </Text>
  <View
    style={
      [
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "height": 10,
          "width": 100,
        }
      }
    >
      <RNSVGSvgView
        bbHeight="10"
        bbWidth="100"
        focusable={false}
        height={10}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 10,
              "width": 100,
            },
          ]
        }
        width={100}
      >
        <RNSVGGroup>
          <RNSVGPath
            fill={
              {
                "payload": 0,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeOpacity",
              ]
            }
            stroke={
              {
                "payload": 4294901760,
                "type": 0,
              }
            }
            strokeOpacity={0.2}
            strokeWidth="3"
          />
          <RNSVGDefs>
            <RNSVGLinearGradient
              gradient={
                [
                  0.2,
                  654245888,
                  0.4,
                  234815488,
                  1,
                  16711680,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="2"
              x1="0"
              x2="0"
              y1="0"
              y2="100%"
            />
          </RNSVGDefs>
          <RNSVGPath
            fill={
              {
                "brushRef": "2",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        animatedProps={
          {
            "width": 120,
          }
        }
        bbHeight="10"
        focusable={false}
        height={10}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
      >
        <RNSVGGroup>
          <RNSVGPath
            fill={
              {
                "payload": 0,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeOpacity",
              ]
            }
            stroke={
              {
                "payload": 4294901760,
                "type": 0,
              }
            }
            strokeOpacity={1}
            strokeWidth="3"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`<LineChartScreen /> test line chart 4 1`] = `
<View>
  <View
    style={
      {
        "flexDirection": "row",
        "paddingBottom": 14,
        "paddingHorizontal": 10,
      }
    }
  >
    <Text
      style={
        {
          "color": "red",
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
      -2890.600
    </Text>
    <Text
      style={
        {
          "color": "red",
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       (
      -99.66
      %)
    </Text>
  </View>
  <View
    style={
      [
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "height": 10,
          "width": 100,
        }
      }
    >
      <RNSVGSvgView
        bbHeight="10"
        bbWidth="100"
        focusable={false}
        height={10}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 10,
              "width": 100,
            },
          ]
        }
        width={100}
      >
        <RNSVGGroup>
          <RNSVGPath
            fill={
              {
                "payload": 0,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeOpacity",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeOpacity={0.2}
            strokeWidth="3"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        animatedProps={
          {
            "width": 120,
          }
        }
        bbHeight="10"
        focusable={false}
        height={10}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
      >
        <RNSVGGroup>
          <RNSVGPath
            fill={
              {
                "payload": 0,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeOpacity",
              ]
            }
            stroke={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            strokeOpacity={1}
            strokeWidth="3"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      collapsable={false}
      handlerTag={1}
      handlerType="LongPressGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "height": 32,
              "justifyContent": "center",
              "width": 32,
            },
            {
              "transform": [
                {
                  "translateX": -17,
                },
                {
                  "translateY": -16,
                },
                {
                  "scale": 0,
                },
              ],
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "backgroundColor": "black",
                "borderRadius": 32,
                "height": 32,
                "opacity": 0.1,
                "position": "absolute",
                "width": 32,
              },
              undefined,
            ]
          }
        />
        <View
          style={
            [
              {
                "backgroundColor": "black",
                "borderRadius": 8,
                "height": 8,
                "width": 8,
              },
              undefined,
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={
          [
            {
              "alignSelf": "flex-start",
              "padding": 4,
              "position": "absolute",
            },
            {
              "opacity": 0,
              "transform": [
                {
                  "translateX": 8,
                },
                {
                  "translateY": 8,
                },
              ],
            },
            undefined,
          ]
        }
      >
        <TextInput
          animatedProps={
            {
              "text": "",
            }
          }
          editable={false}
          style={
            [
              {
                "color": "black",
              },
              {
                "color": "black",
              },
            ]
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        onLayout={[Function]}
        style={
          [
            {
              "alignSelf": "flex-start",
              "padding": 4,
              "position": "absolute",
            },
            {
              "opacity": 0,
              "transform": [
                {
                  "translateX": 8,
                },
                {
                  "translateY": 2,
                },
              ],
            },
            undefined,
          ]
        }
      >
        <TextInput
          animatedProps={
            {
              "text": "",
            }
          }
          editable={false}
          style={
            [
              {
                "color": "black",
              },
              {
                "color": "black",
              },
            ]
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
</View>
`;
