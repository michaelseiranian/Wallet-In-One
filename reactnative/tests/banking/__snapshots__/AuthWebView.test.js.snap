// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AuthWebView /> snapshot test 1`] = `
<View
  style={
    {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "white",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      color="purple"
      size="large"
    />
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Cancel
      </Text>
    </View>
  </View>
  <View
    style={
      [
        {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
      injectedJavaScriptForMainFrameOnly={true}
      javaScriptEnabled={true}
      messagingEnabled={true}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        {
          "uri": undefined,
        }
      }
      style={
        [
          {
            "flex": 1,
            "overflow": "hidden",
          },
          {
            "backgroundColor": "#ffffff",
          },
          undefined,
        ]
      }
      textInteractionEnabled={true}
      useSharedProcessPool={true}
    />
  </View>
</View>
`;
